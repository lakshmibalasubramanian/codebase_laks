fit2 <- eBayes(fit2)
fit2
results <- classifyTestsF(fit2)
results
vennCounts(results)
library(magrittr)
library(affy)
library(limma)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
cont.mat <- makeContrasts(A1A_10_11_clo1 = "A1A_10_11_clone1-A1A_21_emptyvector",
A1A_3_10_clo2 = "A1A_3_10_clone2-A1A_21_emptyvector",
A2A_10_11_clo1 = "A2A_10_11_clone1-A2A_21_emptyvector",
A2A_3_10_clo2 = "A2A_3_10_clone2-A2A_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma <- eBayes(fit.1.rma)
colnames(d)
pData(data_rma)
library(magrittr)
library(limma)
library(affy)
target <- readTargets("targets.txt",
path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima")
dat <- ReadAffy(filenames = target$filename,
celfile.path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/cel")
dat_rma <- rma(dat,
normalize = TRUE)
exp <- dat_rma@assayData$exprs
write.table(dat_rma,
"/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/normalised_RMA.eset")
exp %>% as.data.frame() %>%
write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$anno))
colnames(d) <- levels(factor(target$anno))
fit.rma <- lmFit(dat_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
pData(dat_rma)
cont.mat1 <- makeContrasts(w1i9n="w1_inf-w9_noninf",
w9i9n="w9_inf-w9_noninf",
w14n9n="w14_noninf-w9_noninf",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat1)
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat1)
fit.1.rma
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
d
fit.rma
cont.mat <- makeContrasts(A1A_10_11_clo1 = "A1A_10_11_clone1-A1A_21_emptyvector",
A1A_3_10_clo2 = "A1A_3_10_clone2-A1A_21_emptyvector",
A2A_10_11_clo1 = "A2A_10_11_clone1-A2A_21_emptyvector",
A2A_3_10_clo2 = "A2A_3_10_clone2-A2A_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
M <- matrix(rnorm(100*6,sd=0.3),100,6)
M
M[1,] <- M[1,] + 1
fit <- lmFit(M)
fit
fit.1.rma
fit <- eBayes(fit)
fit
topTable(fit)
fit$p.value
fit.1.rma$design
fit.1.rma$coefficients
fit.1.rma$contrasts
fit
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
library(magrittr)
library(affy)
library(limma)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel_new.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
cont.mat <- makeContrasts(A_10_11_clo1 = "A_10_11_clone1-A_21_emptyvector",
A_3_10_clo2 = "A_3_10_clone2-A_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma
results <- decideTests(fit.1.rma)
vennDiagram(results)
topTable(fit.1.rma)
topTable(fit.1.rma, adjust.method = "fdr", n=500)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
vennDiagram(results)
heatmap(results)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
cont.mat <- makeContrasts(A_10_11_clo1 = "A_10_11_clone1-A_21_emptyvector",
A_3_10_clo2 = "A_3_10_clone2-A_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
results_top <- topTable(fit.1.rma, coef = 2, adjust.method = "fdr", p.value = 0.05, lfc = 1, number = 1000)
vennDiagram(results_top)
results_top <- decideTests(results_top, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
vennDiagram(results)
View(results_top)
results_top <- topTable(fit.1.rma)
View(results_top)
results_top <- topTable(fit.1.rma, coef = 2, adjust.method = "fdr", p.value = 0.05, lfc = 1, number = 10000)
View(results_top)
select_pval <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
select_pval
View(results_top)
colnames(fit.1.rma)
rownames(fit.1.rma)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
rownames(fit.1.rma)[results[,2]==1]
rownames(fit.1.rma)[results[,2]==1]
results
try <- as.data.frame(results)
View(try)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 0)
vennDiagram(results)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 0)
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1)
vennDiagram(results)
genes_up <- rownames(fit.1.rma)[results[,2] == 1]       #list of upregulating genes
genes_down <- rownames(fit.1.rma)[results[,2] == -1]    #list of down regulating genes
genes_diff <- rownames(fit.1.rma)[results[,2] != 0]     #list of genes differently expressed
genes_up
length(genes_up)
length(genes_down)
length(genes_diff)
selection_pvalue <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
dat_sel <- fit.1.rma[selection_pvalue, ]
dat_sel
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
install.packages(gplots)
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
library(ggplot2)
ggplot2::geom_tile(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
vennDiagram(results)
library(magrittr)
library(affy)
library(limma)
library(ggplot2)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel_new.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
cont.mat <- makeContrasts(A1A_10_11_clo1 = "A1A_10_11_clone1-A1A_21_emptyvector",
A1A_3_10_clo2 = "A1A_3_10_clone2-A1A_21_emptyvector",
A2A_10_11_clo1 = "A2A_10_11_clone1-A2A_21_emptyvector",
A2A_3_10_clo2 = "A2A_3_10_clone2-A2A_21_emptyvector",
levels=d)
cont.mat <- makeContrasts(A_10_11_clo1 = "A_10_11_clone1-A_21_emptyvector",
A_3_10_clo2 = "A_3_10_clone2-A_21_emptyvector",
levels=d)
cont.mat <- makeContrasts(A_10_11_clo1 = "A_10_11_clone1-A_21_emptyvector",
A_3_10_clo2 = "A_3_10_clone2-A_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
selection_pvalue <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
dat_sel <- fit.1.rma[selection_pvalue, ]
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1) #lfc is log fold change should be 1
results_top <- topTable(fit.1.rma, coef = 2, adjust.method = "fdr", p.value = 0.05, lfc = 1, number = 10000)  #topTable give the list of differentially expressed genes. "number" is that to give that many number of entries from the toptable list.
select_pval <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
selection_pvalue <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
dat_sel <- fit.1.rma[selection_pvalue, ]
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1) #lfc is log fold change should be 1
results_top <- topTable(fit.1.rma, coef = 2, adjust.method = "fdr", p.value = 0.05, lfc = 1, number = 10000)  #topTable give the list of differentially expressed genes. "number" is that to give that many number of entries from the toptable list.
genes_up <- rownames(fit.1.rma)[results[,2] == 1]       #list of upregulating genes
genes_down <- rownames(fit.1.rma)[results[,2] == -1]    #list of down regulating genes
genes_diff <- rownames(fit.1.rma)[results[,2] != 0]     #list of genes differently expressed
vennDiagram(results)
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.2,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.8,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 1.0,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.5,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
vennDiagram(results,c("up", "down"),
counts.col=c("red", "blue"),
circle.col = c("red", "blue"))
vennDiagram(results)
vennDiagram(results,c("up", "down"),
counts.col=c("red", "blue"),
circle.col = c("red", "blue"))
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients,
key=FALSE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none",
ColSideColors = class_labels)
heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none",
ColSideColors = class_labels)
heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none",
ColSideColors = class_labels)
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none",
ColSideColors = class_labels)
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients,
key=FALSE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients)
heatmap(dat_sel$coefficients,
key=FALSE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none",
dendrogram="none")
heatmap(dat_sel$coefficients,
key=FALSE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
heatmap.(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
heatmap(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
install.packages("gplots")
library(gplots)
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
gplots::heatmap.2(dat_sel$coefficients,
key=FALSE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
gplots::venn(results)
gplots::venn(results, intersections = TRUE)
gplots::venn(as.data.frame(results), intersections = TRUE)
gplots::venn(as.data.frame(results),intersections = TRUE, universe = TRUE)
as.data.frame(genes_up) %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/genes_upregulated.csv")
as.data.frame(genes_down) %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/genes_downregulated.csv")
vennDiagram(results,c("up", "down"),
counts.col=c("red", "blue"),
circle.col = c("red", "blue"))
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.8,
col=hmcols,
scale="none")
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.7,
col=hmcols,
scale="none")
fit.1.rma
as.data.frame(fit.1.rma)
A <- as.data.frame(fit.1.rma)
View(A)
results
results_top
select_pval
p
P
A
View(A)
fit.1.rma
A
View(A)
library(magrittr)
library(affy)
library(limma)
library(gplots)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430B"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel_430B.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430B/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430B/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
cont.mat <- makeContrasts(B_10_11_clo1 = "B_10_11_clone1-B_21_emptyvector",
B_3_10_clo2 = "B_3_10_clone2-B_21_emptyvector",
levels=d)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat)
fit.1.rma <- eBayes(fit.1.rma)
selection_pvalue <- p.adjust(fit.1.rma$p.value[,2], method = "fdr") < 0.05
dat_sel <- fit.1.rma[selection_pvalue, ]
results <- decideTests(fit.1.rma, method = "separate", adjust.method = "fdr", p.value = 0.05, lfc = 1) #lfc is log fold change should be 1
results_top <- topTable(fit.1.rma, coef = 2, adjust.method = "fdr", p.value = 0.05, lfc = 1, number = 10000)  #topTable give the list of differentially expressed genes. "number" is that to give that many number of entries from the toptable list.
genes_up <- rownames(fit.1.rma)[results[,2] == 1]       #list of upregulating genes
genes_down <- rownames(fit.1.rma)[results[,2] == -1]    #list of down regulating genes
genes_diff <- rownames(fit.1.rma)[results[,2] != 0]     #list of genes differently expressed
as.data.frame(genes_up) %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/genes_upregulated.csv")
as.data.frame(genes_up) %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430B/genes_upregulated.csv")
as.data.frame(genes_down) %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430B/genes_downregulated.csv")
vennDiagram(results,c("up", "down"),
counts.col=c("red", "blue"),
circle.col = c("red", "blue"))
gplots::heatmap.2(dat_sel$coefficients,
key=TRUE,
density.info="none",
trace="none",
cexCol = 0.7,
col=hmcols,
scale="none")
