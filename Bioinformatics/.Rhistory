<<<<<<< HEAD
library(AnnotationDbi)
library(KEGGREST)
listDatabases()
keggList("genome")
listDatabases()
keggList("ko")
keggList("hsa")
keggList("hsa:87")
keggGet("hsa:87")
pathway <- keggGet("hsa:87")
pathway[6]
pathway[[6]]
pathway(1)
pathway
pathway[,1]
length(pathway)
names(pathway[[1]])
names(pathway[[2]])
names(pathway[[,1]])
names(pathway[[1]])
pathway[[1]]$PATHWAY
pathway[[1]]$NAME
pathway[[1]]$NETWORK
pathway[[1]]$NAME
pathway <- keggGet("hsa:81")
pathway[[1]]$NAME
pathway[[1]]$PATHWAY
keggList("hsa:1793")
pathway <- keggGet("hsa:1793")
pathway[[1]]$NAME
pathway[[1]]$PATHWAY
try<- pathway[[1]]$PATHWAY
try
try[1]
try[2]
try[4]
try[5]
pathway[[1]]$PATHWAY
pathway[[1]]$ENTRY
pathway[[1]]$NAME
pathway[[1]]$DEFINITION
pathway[[1]]$PATHWAY
listDatabases()
keggList("hsa")
keggList("hsa")
function(organism)
http://rest.kegg.jp/list/pathway
function(organism())
function(organism)
mnb
keggList("hsa")
try
library(AnnotationDbi)
library(KEGGREST)
listDatabases()
kegg_ids <- c(
"hsa:652",
"hsa:81",
"hsa:1514",
"hsa:6921",
"hsa:10163"
)
for (m in 1:length(kegg_ids)){
pathway <- keggList(kegg_ids[m])
print(pathway)
}
for (m in 1:length(kegg_ids)){
pathway <- keggList(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
pathway
kegg_ids[2]
keggList(kegg_ids[2])
p <- keggList(kegg_ids[2])
p
keggList("hsa:81")
keggList(hsa:81)
keggList("hsa:1793")
library(AnnotationDbi)
library(KEGGREST)
keggList("hsa:1793")
pathway <- keggGet("hsa:1793")
pathway <- keggGet("hsa:1793")
for (m in 1:length(kegg_ids)){
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
library(curl)
for (m in 1:length(kegg_ids)){
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
curl_version()
curl_fetch_memory("https://httpbin.org/get", new_handle(verbose = TRUE))
for (m in 1:length(kegg_ids)){
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
for (m in 1:length(kegg_ids)){
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
print(pathway[[1]]$NAME)
for (m in 1:length(kegg_ids)){
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$NAME)
}
pathway[[1]]$NAME
pathway[[1]]$ORGANISM
pathway[[1]]$PATHWAY
for (m in 1:length(kegg_ids)){
print(kegg_ids[m])
pathway <- keggGet(kegg_ids[m])
print(pathway[[1]]$PATHWAY)
}
path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/GO_analysis/geneid_KEGGid.csv"
"hsa:652",
"hsa:81",
"hsa:1514",
"hsa:6921",
"hsa:10163"
library(AnnotationDbi)
library(KEGGREST)
library(curl)
path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/GO_analysis/geneid_KEGGid.csv"
path
path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/GO_analysis/geneid_KEGGid.csv"
path
library(dplyr)
library(magrittr)
dat <- readr::read_csv("/Volumes/VS_lab_disk/Lakshmi_working_data/GO_analysis/geneid_KEGGid.csv")
View(dat)
dat <- readr::read_csv("/Volumes/VS_lab_disk/Lakshmi_working_data/GO_analysis/geneid_KEGGid.csv")
View(dat)
gene_id <- dat[[1]]
gene_id
length(gene_id)
kegg_id <- dat[[3]]
kegg_id
for (m in 1:length(gene_id)){
print(kegg_id[m])
pathway <- keggGet(kegg_id[m])
print(pathway[[1]]$PATHWAY)
}
# Intialising the necessary library
library(ggplot2)
library(dplyr)
library(magrittr)
library(svglite)
library(grid)
library(gridExtra)
#Reading the data file
#dat_deb <- readr::read_csv("/media/lab-admin/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/Salicylate_Exp2.csv")
dat_deb <- readr::read_csv("/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/Salicylate_Exp2.csv")
dat_deb$Timepoint <- NA
dat_deb$Timepoint[grep("2",dat_deb$Name)] <- "24hpi"
#dat_maruthi_sal <- readr::read_csv("/media/lab-admin/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/salicylate_maruthi_48hpi.csv")
dat_maruthi_sal <- readr::read_csv("/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/salicylate_maruthi_48hpi.csv")
dat_maruthi_sal$Timpoint <-NA
dat_maruthi_sal$Timpoint <- "48hpi"
dat_maruthi_sal$Status <- NA
dat_maruthi_sal$Status <- "Treated"
#dat_maruthi_ctrl <- readr::read_csv("/media/lab-admin/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/control_maruthi_48hpi.csv")
dat_maruthi_ctrl <- readr::read_csv("/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/control_maruthi_48hpi.csv")
dat_maruthi_ctrl$Timepoint <- NA
dat_maruthi_ctrl$Timepoint <- "48hpi"
dat_maruthi_ctrl$Status <- NA
dat_maruthi_ctrl$Status <- "Untreated"
colnames(dat_maruthi_ctrl) <- colnames(dat_maruthi_sal)
dat_maruthi <- data.frame() %>% nrow() %>% ncol()
dat_maruthi <- rbind(dat_maruthi_sal, as.data.frame(dat_maruthi_ctrl)) %>% as.data.frame()
dat_maruthi$NorBCImagevol <- NA
dat_maruthi$NorBCImagevol <- dat_maruthi$Branches/dat_maruthi$Totalimagedvolume
dat_maruthi$NorTotal_length <- NA
dat_maruthi$NorTotal_length <- round((dat_maruthi$Total_length/dat_maruthi$Totalimagedvolume),digits = 4)
dat_deb_temp <- data.frame() %>% nrow() %>% ncol()
dat_deb_temp <-
cbind(
dat_deb %>% dplyr::select(BC.Length)%>%as.matrix() %>% as.numeric(),
dat_deb %>% dplyr::select(No.Branch)%>%as.matrix(),
dat_deb %>% dplyr::select(BL.avgLength)%>%as.matrix(),
dat_deb %>% dplyr::select(BC.Vol)%>%as.matrix(),
dat_deb %>% dplyr::select(Mean.BC.Dia)%>%as.matrix(),
dat_deb %>% dplyr::select(Mean.BC.CS)%>%as.matrix(),
dat_deb %>% dplyr::select(Imaged.vol)%>%as.matrix(),
dat_deb %>% dplyr::select(BC.vol.frac)%>%as.matrix(),
dat_deb %>% dplyr::select(Timepoint)%>%as.matrix(),
dat_deb %>% dplyr::select(Type)%>%as.matrix()
)%>% as.data.frame()
col <- colnames(dat_maruthi_ctrl)
colnames(dat_deb_temp) <- col
dat_master <- rbind(dat_maruthi,dat_deb_temp) %>% as.data.frame()
dat_master <- data.frame(lapply(dat_master,as.numeric))
D <- transform(dat_master, Timpoint = as.character(Timpoint),
Status = as.character(Status),
Total_length = as.numeric(Total_length),
Branches = as.numeric(Branches),
Averbranchleng = as.numeric(Averbranchleng),
TotalBCvolume = as.numeric(TotalBCvolume),
`MeanBC(tube)diameter` = as.numeric(`MeanBC(tube)diameter`),
`MeanBC(tube)crosssection` = as.numeric(`MeanBC(tube)crosssection`),
Totalimagedvolume = as.numeric(Totalimagedvolume)
)
dat_24 <- D %>% dplyr::filter(D$Timpoint == "24hpi")
dat_24$NorBCImageVol <- NA
dat_24$NorBCImageVol <- round((dat_24$Branches/dat_24$Totalimagedvolume),digits = 4)
dat_24$NorTotal_length <- NA
dat_24$NorTotal_length <- round((dat_24$Total_length/dat_24$Totalimagedvolume),digits = 4)
dat_maruthi_treat <- dat_maruthi%>%dplyr::filter(dat_maruthi$Status == "Treated")
dat_maruthi_untreat <- dat_maruthi%>%dplyr::filter(dat_maruthi$Status == "Untreated")
dat_24_treat <- dat_24 %>%dplyr::filter(dat_24$Status == "Treated")
dat_24_untreat <- dat_24 %>%dplyr::filter(dat_24$Status == "Untreated")
dat_deb <- readr::read_csv("/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/Salicylate_Exp2.csv")
dat_maruthi_sal <- readr::read_csv("/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data/salicylate_maruthi_48hpi.csv")
View(dat_maruthi)
View(dat_deb)
write.csv(dat_maruthi, file = "/Volumes/VS_lab_disk/Maruthi_data/dat_maruthi_48hpi.csv")
write.csv(dat_deb, file = "/Volumes/VS_lab_disk/Maruthi_data/dat_debakshi_24hpi.csv")
=======
try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(KEGGREST)
installed.packages(KEGGREST)
biocLite("KEGGREST")
library(KEGGREST)
installed.packages(KEGGREST)
library(KEGGREST)
installed.packages(KEGGREST)
install.packages(KEGGREST)
source("https://bioconductor.org/biocLite.R")
biocLite("KEGGREST")
installed.packages(KEGGREST)
library(KEGGREST)
biocLite()
biocLite("KEGGREST")
library(KEGGREST)
library(KEGGREST)
biocLite("KEGGREST")
library(KEGGREST)
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(AnnotationDbi)
biocLite("GenomicFeatures")
biocLite()
library("BiocInstaller", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
biocLite("GenomicFeatures")
biocLite("KEGGREST")
>>>>>>> origin/master
library(magrittr)
library(affy)
library(limma)
##If you use Affymetrix chips your microarray data will consist of a series of CEL files containing raw intensities for each probe on the array. Save all CEL files you want to analyze in a single directory. They may be gzipped (*.gz) - you do not need to gunzip them
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
##Import all the CEL files by a single command using the ReadAffy() method. ReadAffy will read all CEL files in the folder and load them into an AffyBatch object in R
#Reading cel files
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
View(target)
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
View(d)
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
colnames(d)
fit.rma <- lmFit(data_rma, d)
fit.rma <- lmFit(data_rma, d)
dim(data)
dim(d)
View(d)
dim(data)
View(data)
a<-as.data.frame(data)
dim(data_rma)
dim(d)
View(d)
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
library(magrittr)
library(limma)
library(affy)
target <- readTargets("targets.txt",
path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima")
dat <- ReadAffy(filenames = target$filename,
celfile.path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/cel")
dat_rma <- rma(dat,
normalize = TRUE)
exp <- dat_rma@assayData$exprs
write.table(dat_rma,
"output1/normalised_RMA.eset")
write.table(dat_rma,
"/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/normalised_RMA.eset")
write.table(dat_rma,
"/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/normalised_RMA.eset")
exp %>% as.data.frame() %>%
write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$anno))
colnames(d) <- levels(factor(target$anno))
fit.rma <- lmFit(dat_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
dim(dat_rma)
dim(d)
View(d)
View(d)
head(dat_rma)
head(data_rma)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
dim(data_rma)
dim(d)
head(data_rma)
head(dat_rma)
library(magrittr)
library(affy)
library(limma)
celfilepath = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/430A"
data <- ReadAffy(celfile.path = celfilepath)
target <- readTargets("list_cel.txt", path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/")
data_rma = rma(data, normalize = TRUE)
exp <- data_rma@assayData$exprs
write.table(data_rma, "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/normalised_RMA.eset")
exp %>% as.data.frame() %>% write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/output_430/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$file))
colnames(d) <- levels(factor(target$file))
fit.rma <- lmFit(data_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
fit.rma
d
target <- readTargets("targets.txt",
path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima")
dat <- ReadAffy(filenames = target$filename,
celfile.path = "/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/cel")
dat_rma <- rma(dat,
normalize = TRUE)
exp <- dat_rma@assayData$exprs
write.table(dat_rma,
"/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/normalised_RMA.eset")
exp %>% as.data.frame() %>%
write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/expression_data.csv")
exp %>% as.data.frame() %>%
write.csv("/media/lab-admin/VS_lab_disk/Lakshmi_working_data/microarray_data_varadha/Microarray_Ashima/output1/expression_data.csv")
d <- model.matrix(~ 0 + factor(target$anno))
colnames(d) <- levels(factor(target$anno))
fit.rma <- lmFit(dat_rma, d)
hmcols <- colorRampPalette(c("red", "white", "blue"))(n=256) ##color palette for Heatmap
d
fit.rma
cont.mat1 <- makeContrasts(w1i9n="w1_inf-w9_noninf",
w9i9n="w9_inf-w9_noninf",
w14n9n="w14_noninf-w9_noninf",
levels=d)
View(cont.mat1)
fit.1.rma <- contrasts.fit(fit.rma,
cont.mat1)
fit.1.rma
fit.rma
fit.1.rma
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma <- eBayes(fit.1.rma)
fit.1.rma
cont.mat <- makeContrasts()
