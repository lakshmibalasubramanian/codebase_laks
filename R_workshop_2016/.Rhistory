getwd()
get wd
getwd()
clear
a=5
a
b=6
b
c=a+b
c
print(C)
print (C)
print C
quit()
10%4
10/4
10%%4
x=seq(0,1000,3)
x
ss = subset(x,(x%%6)==0)
ss
subset(x,(((2(x^2)) + (5*x) <250))
name = paste("gene-",seq(1:100))
name
name = paste("gene-",seq(1:100),sep = "")
name
index = seq(101:200)
index
dat1 = rnorm(100,mean = 50, sd = 5)
dat1
dat1 = round(dat1,digits = 1)
dat1
dat2 = rnom
dat2 = rnorm()
dat2 = rnorm(100,mean = 20,sd =3)
dat2 = round(dat2,digits = 2)
dat2
dat3 = dat1 + dat2
dat4 = (dat1+dat2)*0.5
dat4
dat4 = round(dat4, digits = 2)
dat4
mydat = data.frame(name,index,dat1,dat2,dat3)
mydat
View(mydat)
getwd()
setwd("E:\DATA\LAKSHMI\Varadha_lab\R_workshop_2016")
setwd("E:/DATA/LAKSHMI/Varadha_lab/R_workshop_2016")
getwd()
write.table(mydat,"datfile.txt", sep = "\t")
write.table(mydat,"datfile.txt", sep = '\t')
write.table(mydat,"datfile.txt", sep = '\t', rownames = FALSE)
write.table(mydat,"datfile.txt", sep = "\t", rownames = FALSE)
write.table(mydat,"datfile.txt", sep = '\t', row.names = FALSE)
write.table(mydat,"datfile.txt", sep = '\t')
write.table(mydat,"datfile.txt", sep = '\t', row.names = FALSE)
name = paste("gene-",seq(1:100),sep = "")
name
index = seq(101:200)
index
dat1 = rnorm(100,mean = 50, sd = 5)
dat1
dat1 = rnorm(100,mean = 50, sd = 5)
dat2 = rnorm(100,mean = 20,sd =3)
dat2 = round(dat2,digits = 2)
dat2
dat3 = dat1 + dat2
dat4 = (dat1+dat2)*0.5
dat4
mydat = data.frame(name,index,dat1,dat2,dat3) //This is creating the dataframe with the vectors
mydat
View(mydat)
getwd()
setwd("E:/DATA/LAKSHMI/Varadha_lab/R_workshop_2016") //This is to set the working directory as current directory
write.table(mydat,"datfile.txt", sep = '\t')
write.table(mydat,"datfile.txt", sep = '\t', row.names = FALSE)
getwd()
data = read.table("datfile.txt", sep = "\t")
View(data)
data = read.table("datfile.txt", sep = "\t", header = TRUE)
dim(data)
names(data)
data[2,3]
data[3,]
data[,4]
data
data[2:8,5]
data[3,1:5]
data[5:20,]
d = data[5:20,]
write.table(d,"test.csv", sep = '\t')
write.table(d,"test.txt", sep = '\t')
help("write.csv")
write.table(d,"test.txt", sep = '\t', row.names = FALSE)
data$name
dsum = (data$dat1 + data$dat2 + data$dat3)
dsum = (data$dat1 + data$dat2 + data$dat3) /3
gm = (data$dat1 * data$dat2)^0.5
data1 = data.frame(data,dsum,gm)
mydata = read.table("microarray_data.txt")
mydata
View(mydata)
names(mydata)
mydata = read.table("microarray_data.txt", header = TRUE)
names(mydata)
mc = (mydata$C1 + mydata$C2 + mydata$C3 + mydata$C4 + mydata$C5)
mc = (mydata$C1 + mydata$C2 + mydata$C3 + mydata$C4 + mydata$C5 + mydata$C6 + mydata$C7)/7
ms
mc
mt = (mydata$T1 + mydata$T2 + mydata$T3 + mydata$T4 + mydata$T5 + mydata$T6 + mydata$T7)/7
mt
fc = mt/mc
fc
fclog2 = log2(fc)
plot(mydata$C1,mydata$C2,col = "red")
plot(mydata$C2,mydata$C3,col = "red")
plot(mydata$C3,mydata$CT5,col = "red")
plot(mydata$C3,mydata$T5,col = "red")
cor(mydata$C1, mydata$T1)
fr = mydata[,2:15]
View(fr)
m = as.matrix(fr)
heatmap(m)
View(m)
View(fr)
rownames(m) =mydata$geneSymbol
heatmap(m)
str1 = "hi how are you"
Str2 = "fine"
str2 = "fine"
mydata
m
mylis = list(dat=mydata, mat = m, string =str1, string2 = str2)
mylis
names(mylis)
mylis($dat)
mylis$dat
save(mylis,file ="little")
save(mylis,file ="little.RData")
x = c(7.5,8.0,7.8,6.7,6.2,8.8,9.4,8.1,5.7,8.4)
p = (mean(x) - mu)/sigma
mu = 8
sigma = 1.5
p = (mean(x) - mu)/sigma
p
Z = (mean(x) - mu)/(sigma/sqrt(length(x)))
Z
p = pnorm(Z)
p
p
p
n = 10
sigma = 1.5
mu = 8
x = rnorm(n,mu,sigma)
z = (mean(x) - mu)/(sigma/sqrt(n)))
z = (mean(x) - mu)/(sigma/sqrt(n))
z
p = 1-pnorm(z)
p
x = c(5.1,4.8,5.1,4.3,8.4,7.6,7.5,3.8,2.8,6.2)
x = c(5.1,4.8,5.1,4.3,8.4,7.6,7.5,3.8,2.8,6.2)
y = c(5.6,3.9,6.8,6.8,5.7,6.2,7.5,6.1,6.4,4.2,4.7,5.4)
sigmax = 1.3
sigmay = 1.3
xbar = mean(x)
ybar = mean(y)
m = length(x)
n = length(y)
m
n
nullhyp = (xbar - ybar)/sqrt(((sigmax^2)/m) + ((sigmay^2)/n))
nullhyp
x = rnorm(14,mean = 50, sd = 1.0)
x = rnorm(14,mean = 50, sd = 1.0)
y = rnorm(16, mean = 30, sd = 1.0)
sigmax = 1.3
sigmay = 1.3
xbar = mean(x)
ybar = mean(y)
m = length(x)
n = length(y)
m
n
nullhyp = (xbar - ybar)/sqrt(((sigmax^2)/m) + ((sigmay^2)/n))
nullhyp
x = rnorm(14,mean = 50, sd = 1.0)
y = rnorm(16, mean = 30, sd = 1.0)
#sigmax = 1.3
#sigmay = 1.3
xbar = mean(x)
ybar = mean(y)
m = length(x)
n = length(y)
m
n
#nullhyp = (xbar - ybar)/sqrt(((sigmax^2)/m) + ((sigmay^2)/n))
nullhyp = (xbar - ybar)/sqrt(((sd^2)/m) + ((sd^2)/n))
nullhyp = (xbar - ybar)/sqrt(((sigmax^2)/m) + ((sigmay^2)/n))
nullhyp
pnorm(nullhyp)
1-pnorm(nullhyp)
x = rnorm(14,mean = 5.0, sd = 1.0)
y = rnorm(16, mean = 3.0, sd = 1.0)
#sigmax = 1.3
#sigmay = 1.3
xbar = mean(x)
ybar = mean(y)
m = length(x)
n = length(y)
m
n
nullhyp = (xbar - ybar)/sqrt(((sigmax^2)/m) + ((sigmay^2)/n))
nullhyp
x = rnorm(14,mean = 5.0, sd = 1.0)
y = rnorm(16, mean = 3.0, sd = 1.0)
res = t.test(x,y,alternative = c("twosided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
help("t.test")
res = t.test(x,y,alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
res
res = t.test(x,y,alternative = c("two.sided"), paired = FALSE, var.equal = TRUE, conf.level = 0.95)
# var.equal = false means it is welch's t-test
res
res = t.test(x,y,alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
# var.equal = false means it is welch's t-test
res
library(plot3D)
install.packages(plot3D)
install.packages("plot3D")
library(plot3D)
# X,Y and Z values
x = c(1,2,3,4,5)
y = c(1,2,3,4,5)
zval = c(20.8, 22.3, 22.7, 11.1, 20.1, 2.2,  6.7,  14.1, 6.6,  24.7, 15.7, 15.1, 9.9,  9.3,  14.7, 8.0,  14.3, 5.1,  6.5,  19.7, 21.9, 11.2, 11.6, 3.9,  14.8 )
# Convert Z values into a matrix.
z = matrix(zval, nrow=5, ncol=5, byrow=TRUE)
hist3D(x,y,z, zlim=c(0,50), theta=40, phi=40, axes=TRUE,label=TRUE, nticks=5,ticktype="detailed", space=0.5, lighting=TRUE, light="diffuse", shade=0.5)
##### for saving plots
install.packages("Cairo")
library(Cairo)
## Initialize the device for saving first plot.
## Plot will have length=500 pixel, width=500 pixel
## saved as a png image file called "testfile1.png"
Cairo(file="testfile1.png",
type="png",
units="px",
width=500,
height=500,
pointsize=12,
dpi="auto")
## Now render the plot
x = rnorm(10000)
hist(x, col="red")
## When the device is off, file writing is completed.
dev.off()
## Initialize the device for saving second plot.
## Plot will have length=400 pixel, width=300 pixel
## saved as a png image file called "testfile2.jpg"
Cairo(file="testfile2.jpg",
type="png",
units="px",
width=400,
height=300,
pointsize=12,
dpi="auto")
## Now render the plot
x = c(1,2,3,4,5,6)
y = c(10,20,30,40,50,60)
plot(x,y,col="red", type="b")
## When the device is off, file writing is completed.
dev.off()
squarenum=function(vec,num){
s=(vec^2/num)
ss=sum(s)
squarenum=function(vec,num){
s=(vec^2/num)
ss=sum(s)
sa=sqrt(ss)
return(sa)
}
v1=c(20,30,40,50,60,70)
vec=squarenum(v1,200)
print (vec)
nullhyp
quit()
exit
kasjhkaj
asdkjsakjgskjdgfkasjdfgj
