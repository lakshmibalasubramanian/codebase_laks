scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=13, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Volume of PVM (micron^3)") + xlab("Timepoint of infection (Salicylate treatment)") +
ggplot2::ggsave("Vol_PVM_sali_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("Vol_PVM_sali_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SA, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SA, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
theme(axis.title = element_text(size=13, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface area (pixels) of BC on PVM") + xlab("Timepoint of infection") +
ggplot2::ggsave("SA_pix_BC_PVM.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_pix_BC_PVM.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SV, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SV, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=13, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface voxels of BC on PVM") + xlab("Timepoint of infection (Salicylate treatement)") +
ggplot2::ggsave("SA_Vox_BC_PVM_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_BC_PVM_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SV, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SV, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface voxels of BC on PVM") + xlab("Timepoint of infection (Salicylate treatement)") +
ggplot2::ggsave("SA_Vox_BC_PVM_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_BC_PVM_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SV, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SV, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface voxels of BC on PVM") + xlab("Timepoint of infection"\n"(Salicylate treatement)") +
ggplot2::ggsave("SA_Vox_BC_PVM_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_BC_PVM_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SV, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SV, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface voxels of BC on PVM") + xlab("Timepoint of infection \n (Salicylate treatement)") +
ggplot2::ggsave("SA_Vox_BC_PVM_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_BC_PVM_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, PVM_BC_SA, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = PVM_BC_SA, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Surface area (pixels) of BC on PVM") + xlab("Timepoint of infection") +
ggplot2::ggsave("SA_pix_BC_PVM.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("SA_pix_BC_PVM.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_all) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, pvm_Vol, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = pvm_Vol, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) + P +
scale_x_discrete(expand=c(0,0)) +
<<<<<<< HEAD
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.6), legend.text = element_text(size = 5), axis.line = element_line()) + ylab("Volume of PVM (micron^3)") + xlab("Timepoint of infection \n (Salicylate treatment)") +
ggplot2::ggsave("Vol_PVM_sali_new.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("Vol_PVM_sali_new.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Analysis_SA_Vol/", width = 4, height = 5, units = "in", dpi = 300)
=======
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.5), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Total length of BC (micron)") + xlab("Timepoint of infection") +
ggplot2::ggsave("nortotlengBC_sali_24.png", path = "/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("nortotlengBC_sali_24.svg", path = "/Volumes/VS_lab_disk/Maruthi_data/Debakshi_salicylate_expt2_data", width = 4, height = 5, units = "in", dpi = 300)
dat_maruthi_treat <- dat_maruthi%>%dplyr::filter(dat_maruthi$Status == "Treated")
dat_maruthi_untreat <- dat_maruthi%>%dplyr::filter(dat_maruthi$Status == "Untreated")
dat_24_treat <- dat_24 %>%dplyr::filter(dat_24$Status == "Treated")
dat_24_untreat <- dat_24 %>%dplyr::filter(dat_24$Status == "Untreated")
tes_norbranch_48 <- t.test(dat_maruthi_treat %>% dplyr::select(NorBCImagevol) %>% as.matrix(), dat_maruthi_untreat %>% dplyr::select(NorBCImagevol) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_norbranch_48
tes_norbran_24 <- t.test(dat_24_treat%>% dplyr::select(NorBCImageVol) %>% as.matrix(), dat_24_untreat %>% dplyr::select(NorBCImageVol) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_norbran_24
tes_len_48 <- t.test(dat_maruthi_treat %>% dplyr::select(Total_length) %>% as.matrix(), dat_maruthi_untreat %>% dplyr::select(Total_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_len_48
tes_norlen_48 <- t.test(dat_maruthi_treat %>% dplyr::select(NorTotal_length) %>% as.matrix(), dat_maruthi_untreat %>% dplyr::select(NorTotal_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_norlen_48
tes_leng_24 <- t.test(dat_24_treat%>% dplyr::select(Total_length) %>% as.matrix(), dat_24_untreat %>% dplyr::select(Total_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_leng_24
tes_leng_24 <- t.test(dat_24_treat%>% dplyr::select(NorTotal_length) %>% as.matrix(), dat_24_untreat %>% dplyr::select(NorTotal_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_leng_24 <- t.test(dat_24_treat%>% dplyr::select(Total_length) %>% as.matrix(), dat_24_untreat %>% dplyr::select(Total_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_norleng_24 <- t.test(dat_24_treat%>% dplyr::select(NorTotal_length) %>% as.matrix(), dat_24_untreat %>% dplyr::select(NorTotal_length) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_norleng_24
# Intialising the necessary library
library(ggplot2)
library(dplyr)
library(magrittr)
library(svglite)
library(grid)
library(gridExtra)
dat <- readr::read_csv("/Volumes/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/Tabish_Lakshmi_comparison1.csv")
View(dat)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(dat$Image,dat$Branches_flow))
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(Image,Branches_flow))
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(Image,Branches_flow), binwidth = 0.1)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(Branches_flow), binwidth = 0.1)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(x = Image, Y = Branches_flow), binwidth = 20)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(x = Image, y = Branches_flow), binwidth = 20)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(x = Image, y = Branches_flow))
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(y = Branches_flow))
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(y = Branches_flow))
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(x = Image, y = Branches_flow), stat = "identity")
View(dat)
View(dat)
dat <- readr::read_csv("/Volumes/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/Tabish_Lakshmi_comparison1.csv")
View(dat)
View(dat)
ggplot2::ggplot(dat) +
ggplot2::geom_histogram(ggplot2::aes(x = Image, y = Branches, color = Status), stat = "identity")
>>>>>>> origin/HEAD
library(ggplot2)
library(dplyr)
library(magrittr)
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
library(ggplot2)
library(dplyr)
library(magrittr)
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
m<-0
k<-0
for (m in 1:length(folder_list)){
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
#print(file_images)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s%s",file_images[k],comm_file)
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
for (l in 1:length(file_images)){
total_par[[l]] <- rbind(parameters[[l]]) %>% as.data.frame()
#Assigning the column names in the dataframe append_parameters
colnames(total_par[[l]]) <- c(
"Totallength",
"Numberofbranches",
"Averagebranchlength",
"TotalBCvolume",
"MeanBC(tube)diameter",
"MeanBC(tube)cross-section",
"Totalimagedvolume",
"VolumefractionoccupiedbyBC"
)
#Adding additional columns for image file names
total_par[[l]]$File <- file_images_temp[l]
total_par[[l]]$Timepoint <- "33hpi"
#This is to check for the pattern in the variable. "grepl" returns the logical output i.e TRUE or FALSE
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else if (grepl("crt", file_images_temp[l])){
total_par[[l]]$Treatment <- "Untreated"
} else if (grepl("ctr", file_images_temp[l])){
total_par[[l]]$Treatment <- "Untreated"
}
}
dat_33hpi_temp[[m]] <- total_par %>% bind_rows()
}
print(file_images)
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
parameters <- list(list())
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
dat_full <- list(list())
dat_33hpi <- list(list())
dat_33hpi_temp <- list(list())
total_par <- list(list())
m<-0
k<-0
comm_file <- "/PVM_mask_C2-dupli_image.tif_result"
for (m in 1:length(folder_list)){
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
print(file_images)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
for (l in 1:length(file_images)){
total_par[[l]] <- rbind(parameters[[l]]) %>% as.data.frame()
#Assigning the column names in the dataframe append_parameters
colnames(total_par[[l]]) <- c(
"Totallength",
"Numberofbranches",
"Averagebranchlength",
"TotalBCvolume",
"MeanBC(tube)diameter",
"MeanBC(tube)cross-section",
"Totalimagedvolume",
"VolumefractionoccupiedbyBC"
)
#Adding additional columns for image file names
total_par[[l]]$File <- file_images_temp[l]
total_par[[l]]$Timepoint <- "33hpi"
#This is to check for the pattern in the variable. "grepl" returns the logical output i.e TRUE or FALSE
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else if (grepl("crt", file_images_temp[l])){
total_par[[l]]$Treatment <- "Untreated"
} else if (grepl("ctr", file_images_temp[l])){
total_par[[l]]$Treatment <- "Untreated"
}
}
dat_33hpi_temp[[m]] <- total_par %>% bind_rows()
}
dat_33hpi <- dat_33hpi_temp %>% bind_rows()
View(dat_33hpi)
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else {
total_par[[l]]$Treatment <- "Untreated"
}
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
# Creating the list
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
#Empty dataframe
parameters <- list(list())
dat_full <- list(list())
dat_24hpi <- list(list())
total_par <- list(list())
dat_24hpi_temp <- list(list())
total_par <- list(list())
m<-0
k<-0
for (m in 1:length(folder_list)){
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
print(file_images)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
for (l in 1:length(file_images)){
total_par[[l]] <- rbind(parameters[[l]]) %>% as.data.frame()
#Assigning the column names in the dataframe append_parameters
colnames(total_par[[l]]) <- c(
"Totallength",
"Numberofbranches",
"Averagebranchlength",
"TotalBCvolume",
"MeanBC(tube)diameter",
"MeanBC(tube)cross-section",
"Totalimagedvolume",
"VolumefractionoccupiedbyBC"
)
#Adding additional columns for image file names
total_par[[l]]$File <- file_images_temp[l]
total_par[[l]]$Timepoint <- "24hpi"
#This is to check for the pattern in the variable. "grepl" returns the logical output i.e TRUE or FALSE
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else {
total_par[[l]]$Treatment <- "Untreated"
}
}
dat_24hpi_temp[[m]] <- total_par %>% bind_rows()
}
dat_24hpi <- dat_24hpi_temp %>% bind_rows()
#Writing to seperate csv in the specified path
#write.csv(dat_33hpi, file = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Experiment6_images/Tubeness_polarity_33hpi/master_data_33hpi.csv")
View(dat_24hpi)
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
# Creating the list
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
#Empty dataframe
parameters <- list(list())
dat_full <- list(list())
dat_24hpi <- list(list())
total_par <- list(list())
dat_24hpi_temp <- list(list())
total_par <- list(list())
m<-0
k<-0
for (m in 1:length(folder_list)){
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
print(file_images)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
for (l in 1:length(file_images)){
total_par[[l]] <- rbind(parameters[[l]]) %>% as.data.frame()
#Assigning the column names in the dataframe append_parameters
colnames(total_par[[l]]) <- c(
"Totallength",
"Numberofbranches",
"Averagebranchlength",
"TotalBCvolume",
"MeanBC(tube)diameter",
"MeanBC(tube)cross-section",
"Totalimagedvolume",
"VolumefractionoccupiedbyBC"
)
#Adding additional columns for image file names
total_par[[l]]$File <- file_images_temp[l]
total_par[[l]]$Timepoint <- "24hpi"
#This is to check for the pattern in the variable. "grepl" returns the logical output i.e TRUE or FALSE
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else {
total_par[[l]]$Treatment <- "Untreated"
}
}
dat_24hpi_temp[[m]] <- total_par %>% bind_rows()
}
dat_24hpi <- dat_24hpi_temp %>% bind_rows()
#Writing to seperate csv in the specified path
write.csv(dat_33hpi, file = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/tabish_data_24hpi.csv")
View(dat_24hpi)
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
# Creating the list
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
#Empty dataframe
parameters <- list(list())
dat_full <- list(list())
dat_24hpi <- list(list())
total_par <- list(list())
dat_24hpi_temp <- list(list())
total_par <- list(list())
m<-0
k<-0
for (m in 1:length(folder_list)){
file_images <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = TRUE, recursive = FALSE)
file_images_temp <- list.dirs(sprintf("%s%s",data_path,folder_list[m]),full.names = FALSE, recursive = FALSE)
print(file_images)
for (k in 1:length(file_images)){
file_image_new <- sprintf("%s",file_images[k])
print(file_image_new)
parameters[[k]] <-
read.delim(sprintf("%s/log.csv", file_image_new), header = FALSE) %>%
select(-V1,-V3) %>%  #This -V1/-V3 will deselect the first & third row
t() %>%              # This t is do the transpose of the matrix
as.data.frame()
}
for (l in 1:length(file_images)){
total_par[[l]] <- rbind(parameters[[l]]) %>% as.data.frame()
#Assigning the column names in the dataframe append_parameters
colnames(total_par[[l]]) <- c(
"Totallength",
"Numberofbranches",
"Averagebranchlength",
"TotalBCvolume",
"MeanBC(tube)diameter",
"MeanBC(tube)cross-section",
"Totalimagedvolume",
"VolumefractionoccupiedbyBC"
)
#Adding additional columns for image file names
total_par[[l]]$File <- file_images_temp[l]
total_par[[l]]$Timepoint <- "24hpi"
#This is to check for the pattern in the variable. "grepl" returns the logical output i.e TRUE or FALSE
if (grepl("sal", file_images_temp[l])){
total_par[[l]]$Treatment <- "Treated"
} else {
total_par[[l]]$Treatment <- "Untreated"
}
}
dat_24hpi_temp[[m]] <- total_par %>% bind_rows()
}
dat_24hpi <- dat_24hpi_temp %>% bind_rows()
#Writing to seperate csv in the specified path
write.csv(dat_24hpi, file = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/tabish_data_24hpi.csv")
View(dat_24hpi)
library(ggplot2)
library(dplyr)
library(magrittr)
library(svglite)
library(grid)
library(gridExtra)
#Declaring the path
data_path <- "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/"
# Creating the list
folder_list <-
c(
"24_ctrl_network_BL",
"24_treated_network_BL"
)
dat_tabish <- readr::read_csv("/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/tabish_data_24hpi.csv")
View(dat_tabish)
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Branches, fill = Status), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Branches, color = Status), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Number of branches (BC)") + xlab("Timepoint of infection")
Status1 <- factor(dat_tabish$Treatment, levels = c('Untreated', 'Treated'), ordered = TRUE)
Treatment1 <- factor(dat_tabish$Treatment, levels = c('Untreated', 'Treated'), ordered = TRUE)
P <- scale_color_manual(dat_tabish$Treatment, values = c("#006600", "#CC0099"))
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Branches, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Branches, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Number of branches (BC)") + xlab("Timepoint of infection")
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Numberofbranches, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Numberofbranches, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Number of branches (BC)") + xlab("Timepoint of infection")
dat_tabish <- readr::read_csv("/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/tabish_data_24hpi.csv")
Treatment1 <- factor(dat_tabish$Treatment, levels = c('Untreated', 'Treated'), ordered = TRUE)
P <- scale_color_manual(dat_tabish$Treatment, values = c("#006600", "#CC0099"))
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Numberofbranches, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Numberofbranches, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Number of branches (BC)") + xlab("Timepoint of infection")
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Totallength, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Totallength, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Total length of BC (micron)") + xlab("Timepoint of infection")
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Numberofbranches, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Numberofbranches, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Number of branches (BC)") + xlab("Timepoint of infection") +
ggplot2::ggsave("branches_24_tabish.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("branches_24_tabish.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/", width = 4, height = 5, units = "in", dpi = 300)
ggplot2::ggplot(dat_tabish) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint,Totallength, fill = Treatment1), outlier.color = NA, size = 0.6, alpha = 0.0, width = 0.6, position = position_dodge(1), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Totallength, color = Treatment1), cex = 2.5, alpha = 0.7, position = position_jitterdodge(0.2,0.2,1.0))  + P +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
scale_x_discrete(expand=c(0,0)) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), legend.title = element_blank(), legend.position = "none", legend.direction = "horizontal", legend.box.background = element_rect(size = 0.8), legend.text = element_text(size = 6), panel.border = element_blank(), axis.line = element_line()) + ylab("Total length of BC (micron)") + xlab("Timepoint of infection") +
ggplot2::ggsave("Totallength_24_tabish.png", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/", width = 4, height = 5, units = "in", dpi = 300) +
ggplot2::ggsave("Totallength_24_tabish.svg", path = "/media/lab-admin/LAKSHMI2/Lakshmi_working_data_new/Dataset_To_tabish_FlowMethod/tabish_results/Tubeness_BC_24/Analysis_24hpi_tabish/", width = 4, height = 5, units = "in", dpi = 300)
tes_24_tabish <- t.test(dat_tabish %>% dplyr::filter(dat_tabish$Treatment=="Treated") %>% dplyr::select(Totallength) %>% as.matrix(), dat_tabish %>% dplyr::filter(dat_tabish$Treatment=="Untreated") %>% dplyr::select(Totallength) %>% as.matrix() , alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_24_tabish
tes_24_tabish_branches <- t.test(dat_tabish %>% dplyr::filter(dat_tabish$Treatment=="Treated") %>% dplyr::select(Numberofbranches) %>% as.matrix(), dat_tabish %>% dplyr::filter(dat_tabish$Treatment=="Untreated") %>% dplyr::select(Numberofbranches) %>% as.matrix() , alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_24_tabish_branches
