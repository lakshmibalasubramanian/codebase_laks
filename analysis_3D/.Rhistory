#Reading the csv from the output folders
dat <- readr::read_csv(sprintf("%s/CD13_MASK.csv", file_names[i]))
#This dataframe is to extract the number of frames in which PVM is segmented
dat_pvm <- readr::read_csv(sprintf("%s/Image.csv", file_names[i]))
#Renaming the column names in Image.csv with _seg as nothing since in few of 24hpi images output files this _seg is not there. This problem is because the pipelines that I used for both timepoints are not same & so the setting are also not same.
colnames(dat_pvm) <- gsub("_seg", "", colnames(dat_pvm))
#Filtering the rows with atleast one PVM object has been identified
dat_pvm_filter <-
dat_pvm %>%
filter(Count_UIS4 > 0)
#calculating the number of frames in which PVM is segemented.
num_frames_pvm <- nrow(dat_pvm_filter)
#Calculating the mean area of PVM (UIS4) for an image
area_pvm <- mean(dat_pvm$Mean_UIS4_AreaShape_Area, na.rm=TRUE)
#Getting the area of PVM for each image from each frame
dat_area <-
dat_pvm %>%
select(contains("Mean_UIS4_AreaShape_Area"))
#Appending the new column i.e.timepoint
dat_area <- cbind(dat_area, folders_hpi[m])
#This dataframe containes the grouped data. The dataframe can be grouped based on a column name (here   "ImageNumber"). Then summarising the grouped data by applying the function (here function used is "sum")  for as many columns as we need. In this case I am using Integrated intensity.
dat_cd13 <- dat %>%
group_by(ImageNumber) %>%
summarise_each_(funs(sum(.,na.rm=TRUE)),
vars = c("Intensity_IntegratedIntensity_CD13"))
#Getting the number of frames (slices) in an image where CD13 mask is there
num_frames <- nrow(dat_cd13)
tot_int <- sum(dat_cd13$Intensity_IntegratedIntensity_CD13)
# Selecting the required columns from a data frame using the column name matching (or pattern matching)   & storing these in a dataframe
dat_filter <-
dat %>%
select(contains("Intensity_IntegratedIntensity_CD13"),
contains("ObjectNumber"))
#Appending all the data from all the images (including both timepoints)
dat_tot_int <- rbind(dat_tot_int, data.frame(file_names1[i],num_frames,num_frames_pvm,tot_int,folders_hpi[m],area_pvm))
#Appending the two dataframes (combining the details of area of PVM from all the image files)
dat_area_pvm <- rbind(dat_area_pvm, data.frame(dat_area))
}
}
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
base_path <- "/Users/lakshmibalasubramanian/Documents/Lakshmi/CellProfiler_Perimetrics/Output_Zstack"
folders_hpi <- c(
"48hpi",
"24hpi",
"33hpi"
)
dat_tot_int <-
data.frame(
Imagename=character(),
NumberFrames=numeric(),
NumberFrames_PVM=numeric(),
IntegratedIntensityCD13=double(),
Timepoint=character(),
Area_PVM=numeric()
)
dat_area_pvm <-
data.frame(
Area=numeric(),
time_hpi=character()
)
m=1
i=1
for (m in 1:length(folders_hpi)){
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names <- file_names[-1]
#This command is to grep for a pattern (given in quotes) from file_names and replace with nothing
file_names1 <- gsub("/Users/lakshmibalasubramanian/Documents/Lakshmi/CellProfiler_Perimetrics/Output_Zstack", "",file_names)
for (i in 1:length(file_names))
{
#Reading the csv from the output folders
dat <- readr::read_csv(sprintf("%s/CD13_MASK.csv", file_names[i]))
#This dataframe is to extract the number of frames in which PVM is segmented
dat_pvm <- readr::read_csv(sprintf("%s/Image.csv", file_names[i]))
#Renaming the column names in Image.csv with _seg as nothing since in few of 24hpi images output files this _seg is not there. This problem is because the pipelines that I used for both timepoints are not same & so the setting are also not same.
colnames(dat_pvm) <- gsub("_seg", "", colnames(dat_pvm))
#Filtering the rows with atleast one PVM object has been identified
dat_pvm_filter <-
dat_pvm %>%
filter(Count_UIS4 > 0)
#calculating the number of frames in which PVM is segemented.
num_frames_pvm <- nrow(dat_pvm_filter)
#Calculating the mean area of PVM (UIS4) for an image
area_pvm <- mean(dat_pvm$Mean_UIS4_AreaShape_Area, na.rm=TRUE)
#Getting the area of PVM for each image from each frame
dat_area <-
dat_pvm %>%
select(contains("Mean_UIS4_AreaShape_Area"))
#Appending the new column i.e.timepoint
dat_area <- cbind(dat_area, folders_hpi[m])
#This dataframe containes the grouped data. The dataframe can be grouped based on a column name (here   "ImageNumber"). Then summarising the grouped data by applying the function (here function used is "sum")  for as many columns as we need. In this case I am using Integrated intensity.
dat_cd13 <- dat %>%
group_by(ImageNumber) %>%
summarise_each_(funs(sum(.,na.rm=TRUE)),
vars = c("Intensity_IntegratedIntensity_CD13"))
#Getting the number of frames (slices) in an image where CD13 mask is there
num_frames <- nrow(dat_cd13)
tot_int <- sum(dat_cd13$Intensity_IntegratedIntensity_CD13)
# Selecting the required columns from a data frame using the column name matching (or pattern matching)   & storing these in a dataframe
dat_filter <-
dat %>%
select(contains("Intensity_IntegratedIntensity_CD13"),
contains("ObjectNumber"))
#Appending all the data from all the images (including both timepoints)
dat_tot_int <- rbind(dat_tot_int, data.frame(file_names1[i],num_frames,num_frames_pvm,tot_int,folders_hpi[m],area_pvm))
#Appending the two dataframes (combining the details of area of PVM from all the image files)
dat_area_pvm <- rbind(dat_area_pvm, data.frame(dat_area))
}
}
file_names
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names <- file_names[-1]
file_names1 <- gsub("/Users/lakshmibalasubramanian/Documents/Lakshmi/CellProfiler_Perimetrics/Output_Zstack", "",file_names)
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
base_path <- "/Users/lakshmibalasubramanian/Documents/Lakshmi/CellProfiler_Perimetrics/Output_Zstack"
folders_hpi <- c(
"48hpi",
"24hpi",
"33hpi"
)
dat_tot_int <-
data.frame(
Imagename=character(),
NumberFrames=numeric(),
NumberFrames_PVM=numeric(),
IntegratedIntensityCD13=double(),
Timepoint=character(),
Area_PVM=numeric()
)
dat_area_pvm <-
data.frame(
Area=numeric(),
time_hpi=character()
)
m=1
i=1
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names
file_names <- file_names[-1]
file_names
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
base_path <- "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail"
folders_hpi <- c(
"Treated",
"Untreated"
)
dat_tot_int <-
data.frame(
Imagename=character(),
NumberFrames=numeric(),
NumberFrames_PVM=numeric(),
IntegratedIntensityCD13=double(),
Timepoint=character(),
Area_PVM=numeric()
)
dat_area_pvm <-
data.frame(
Area=numeric(),
time_hpi=character()
)
m=1
i=1
m=1
i=1
for (m in 1:length(folders_hpi)){
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names <- file_names[-1]
#This command is to grep for a pattern (given in quotes) from file_names and replace with nothing
file_names1 <- gsub("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", "",file_names)
for (i in 1:length(file_names))
{
#Reading the csv from the output folders
dat <- readr::read_csv(sprintf("%s/CD13_MASK.csv", file_names[i]))
#This dataframe is to extract the number of frames in which PVM is segmented
dat_pvm <- readr::read_csv(sprintf("%s/Image.csv", file_names[i]))
#Renaming the column names in Image.csv with _seg as nothing since in few of 24hpi images output files this _seg is not there. This problem is because the pipelines that I used for both timepoints are not same & so the setting are also not same.
colnames(dat_pvm) <- gsub("_seg", "", colnames(dat_pvm))
#Filtering the rows with atleast one PVM object has been identified
dat_pvm_filter <-
dat_pvm %>%
filter(Count_UIS4 > 0)
#calculating the number of frames in which PVM is segemented.
num_frames_pvm <- nrow(dat_pvm_filter)
#Calculating the mean area of PVM (UIS4) for an image
area_pvm <- mean(dat_pvm$Mean_UIS4_AreaShape_Area, na.rm=TRUE)
#Getting the area of PVM for each image from each frame
dat_area <-
dat_pvm %>%
select(contains("Mean_UIS4_AreaShape_Area"))
#Appending the new column i.e.timepoint
dat_area <- cbind(dat_area, folders_hpi[m])
#This dataframe containes the grouped data. The dataframe can be grouped based on a column name (here   "ImageNumber"). Then summarising the grouped data by applying the function (here function used is "sum")  for as many columns as we need. In this case I am using Integrated intensity.
dat_cd13 <- dat %>%
group_by(ImageNumber) %>%
summarise_each_(funs(sum(.,na.rm=TRUE)),
vars = c("Intensity_IntegratedIntensity_CD13"))
#Getting the number of frames (slices) in an image where CD13 mask is there
num_frames <- nrow(dat_cd13)
tot_int <- sum(dat_cd13$Intensity_IntegratedIntensity_CD13)
# Selecting the required columns from a data frame using the column name matching (or pattern matching)   & storing these in a dataframe
dat_filter <-
dat %>%
select(contains("Intensity_IntegratedIntensity_CD13"),
contains("ObjectNumber"))
#Appending all the data from all the images (including both timepoints)
dat_tot_int <- rbind(dat_tot_int, data.frame(file_names1[i],num_frames,num_frames_pvm,tot_int,folders_hpi[m],area_pvm))
#Appending the two dataframes (combining the details of area of PVM from all the image files)
dat_area_pvm <- rbind(dat_area_pvm, data.frame(dat_area))
}
}
colnames(dat_tot_int) <- c("Imagename", "NumberFrames", "NumberFrames_PVM", "IntegratedIntensityCD13", "Timepoint", "AreaPVM(mean)")
write.csv(dat_tot_int, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
colnames(dat_area_pvm) <- c("Area_PVM", "Timepoint")
write.csv(dat_area_pvm, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
base_path <- "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail"
folders_hpi <- c(
"Treated",
"Untreated"
)
#Initialise an empty dataframes with the specified columns
dat_tot_int <-
data.frame(
Imagename=character(),
NumberFrames=numeric(),
NumberFrames_PVM=numeric(),
IntegratedIntensityCD13=double(),
Timepoint=character(),
Area_PVM=numeric()
)
dat_area_pvm <-
data.frame(
Area=numeric(),
time_hpi=character()
)
m=1
i=1
for (m in 1:length(folders_hpi)){
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names <- file_names[-1]
#This command is to grep for a pattern (given in quotes) from file_names and replace with nothing
file_names1 <- gsub("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", "",file_names)
for (i in 1:length(file_names))
{
#Reading the csv from the output folders
dat <- readr::read_csv(sprintf("%s/CD13_MASK.csv", file_names[i]))
#This dataframe is to extract the number of frames in which PVM is segmented
dat_pvm <- readr::read_csv(sprintf("%s/Image.csv", file_names[i]))
#Renaming the column names in Image.csv with _seg as nothing since in few of 24hpi images output files this _seg is not there. This problem is because the pipelines that I used for both timepoints are not same & so the setting are also not same.
colnames(dat_pvm) <- gsub("_seg", "", colnames(dat_pvm))
#Filtering the rows with atleast one PVM object has been identified
dat_pvm_filter <-
dat_pvm %>%
filter(Count_UIS4 > 0)
#calculating the number of frames in which PVM is segemented.
num_frames_pvm <- nrow(dat_pvm_filter)
#Calculating the mean area of PVM (UIS4) for an image
area_pvm <- mean(dat_pvm$Mean_UIS4_AreaShape_Area, na.rm=TRUE)
#Getting the area of PVM for each image from each frame
dat_area <-
dat_pvm %>%
select(contains("Mean_UIS4_AreaShape_Area"))
#Appending the new column i.e.timepoint
dat_area <- cbind(dat_area, folders_hpi[m])
#This dataframe containes the grouped data. The dataframe can be grouped based on a column name (here   "ImageNumber"). Then summarising the grouped data by applying the function (here function used is "sum")  for as many columns as we need. In this case I am using Integrated intensity.
dat_cd13 <- dat %>%
group_by(ImageNumber) %>%
summarise_each_(funs(sum(.,na.rm=TRUE)),
vars = c("Intensity_IntegratedIntensity_CD13"))
#Getting the number of frames (slices) in an image where CD13 mask is there
num_frames <- nrow(dat_cd13)
tot_int <- sum(dat_cd13$Intensity_IntegratedIntensity_CD13)
# Selecting the required columns from a data frame using the column name matching (or pattern matching)   & storing these in a dataframe
dat_filter <-
dat %>%
select(contains("Intensity_IntegratedIntensity_CD13"),
contains("ObjectNumber"))
#Appending all the data from all the images (including both timepoints)
dat_tot_int <- rbind(dat_tot_int, data.frame(file_names1[i],num_frames,num_frames_pvm,tot_int,folders_hpi[m],area_pvm))
#Appending the two dataframes (combining the details of area of PVM from all the image files)
dat_area_pvm <- rbind(dat_area_pvm, data.frame(dat_area))
}
}
#Writing the csv file for the integrated intensity of CD13 on the PVM (using CP perimetrics) for both the time points
colnames(dat_tot_int) <- c("Imagename", "NumberFrames", "NumberFrames_PVM", "IntegratedIntensityCD13", "Timepoint", "AreaPVM(mean)")
write.csv(dat_tot_int, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
#Writing the csv file for area of PVM from the Perimetrics data for both the timepoints
colnames(dat_area_pvm) <- c("Area_PVM", "Timepoint")
write.csv(dat_area_pvm, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
# Intialising the necessary library
library(ggplot2)
library(dplyr)
library(magrittr)
dat <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
data_area <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
# Intialising the necessary library
library(ggplot2)
library(dplyr)
library(magrittr)
dat <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
data_area <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 1.5, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Hours post infection (hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
View(dat)
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
base_path <- "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail"
folders_hpi <- c(
"Treated",
"Untreated"
)
#Initialise an empty dataframes with the specified columns
dat_tot_int <-
data.frame(
Imagename=character(),
NumberFrames=numeric(),
NumberFrames_PVM=numeric(),
IntegratedIntensityCD13=double(),
Timepoint=character(),
Area_PVM=numeric()
)
dat_area_pvm <-
data.frame(
Area=numeric(),
time_hpi=character()
)
m=1
i=1
for (m in 1:length(folders_hpi)){
file_names <- list.dirs(sprintf("%s/%s", base_path, folders_hpi[m]))
file_names <- file_names[-1]
#This command is to grep for a pattern (given in quotes) from file_names and replace with nothing
file_names1 <- gsub("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", "",file_names)
for (i in 1:length(file_names))
{
#Reading the csv from the output folders
dat <- readr::read_csv(sprintf("%s/CD13_MASK.csv", file_names[i]))
#This dataframe is to extract the number of frames in which PVM is segmented
dat_pvm <- readr::read_csv(sprintf("%s/Image.csv", file_names[i]))
#Renaming the column names in Image.csv with _seg as nothing since in few of 24hpi images output files this _seg is not there. This problem is because the pipelines that I used for both timepoints are not same & so the setting are also not same.
colnames(dat_pvm) <- gsub("_seg", "", colnames(dat_pvm))
#Filtering the rows with atleast one PVM object has been identified
dat_pvm_filter <-
dat_pvm %>%
filter(Count_UIS4 > 0)
#calculating the number of frames in which PVM is segemented.
num_frames_pvm <- nrow(dat_pvm_filter)
#Calculating the mean area of PVM (UIS4) for an image
area_pvm <- mean(dat_pvm$Mean_UIS4_AreaShape_Area, na.rm=TRUE)
#Getting the area of PVM for each image from each frame
dat_area <-
dat_pvm %>%
select(contains("Mean_UIS4_AreaShape_Area"))
#Appending the new column i.e.timepoint
dat_area <- cbind(dat_area, folders_hpi[m])
#This dataframe containes the grouped data. The dataframe can be grouped based on a column name (here   "ImageNumber"). Then summarising the grouped data by applying the function (here function used is "sum")  for as many columns as we need. In this case I am using Integrated intensity.
dat_cd13 <- dat %>%
group_by(ImageNumber) %>%
summarise_each_(funs(sum(.,na.rm=TRUE)),
vars = c("Intensity_IntegratedIntensity_CD13"))
#Getting the number of frames (slices) in an image where CD13 mask is there
num_frames <- nrow(dat_cd13)
tot_int <- sum(dat_cd13$Intensity_IntegratedIntensity_CD13)
# Selecting the required columns from a data frame using the column name matching (or pattern matching)   & storing these in a dataframe
dat_filter <-
dat %>%
select(contains("Intensity_IntegratedIntensity_CD13"),
contains("ObjectNumber"))
#Appending all the data from all the images (including both timepoints)
dat_tot_int <- rbind(dat_tot_int, data.frame(file_names1[i],num_frames,num_frames_pvm,tot_int,folders_hpi[m],area_pvm))
#Appending the two dataframes (combining the details of area of PVM from all the image files)
dat_area_pvm <- rbind(dat_area_pvm, data.frame(dat_area))
}
}
#Writing the csv file for the integrated intensity of CD13 on the PVM (using CP perimetrics) for both the time points
colnames(dat_tot_int) <- c("Imagename", "NumberFrames", "NumberFrames_PVM", "IntegratedIntensityCD13", "Timepoint", "AreaPVM(mean)")
write.csv(dat_tot_int, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
#Writing the csv file for area of PVM from the Perimetrics data for both the timepoints
colnames(dat_area_pvm) <- c("Area_PVM", "Timepoint")
write.csv(dat_area_pvm, file = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
# Chunk 1
# Intialising the necessary library
library(ggplot2)
library(dplyr)
library(magrittr)
# Chunk 2
#Reading the csv file from the path
dat <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_CP_perimetrics_salicylate_master.csv")
data_area <- readr::read_csv("/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail/Data_area_PVM_salicylate_master.csv")
# Chunk 3
#Boxplot for the integrated intensity of the CD13 on PVM
kstest_treat_untreat <-
ks.test(
dat %>% filter(Timepoint == "Treated") %>% select(IntegratedIntensityCD13) %>% as.matrix(),
dat %>% filter(Timepoint == "Untreated") %>% select(IntegratedIntensityCD13) %>% as.matrix()
)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 1.5, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
# Chunk 4
#Density plot for the area of the PVM for both the time points
data_area <- na.omit(data_area)
ggplot2::ggplot(data_area) +
ggplot2::geom_density(ggplot2::aes(group = Timepoint, Area_PVM, color = Timepoint, fill = Timepoint), alpha = 0.3, size = 0.8)+
ggplot2::theme_bw() + theme(axis.text = element_text(size=8, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + xlab("Area of PVM") +
ggplot2::ggsave("Area_distribution.png",
path = "/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 1.2, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 1.0, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 0.5, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 1.8, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 2.0, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 2.5, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 2.3, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
kstest_treat_untreat <-
ks.test(
dat %>% filter(Timepoint == "Treated") %>% select(IntegratedIntensityCD13) %>% as.matrix(),
dat %>% filter(Timepoint == "Untreated") %>% select(IntegratedIntensityCD13) %>% as.matrix()
)
View(dat)
kstest_treat_untreat
View(dat)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 2.3, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black", face = "bold")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(dat) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, IntegratedIntensityCD13), alpha = 0.0, width = 0.4, position = position_dodge(width = 0.5), varwidth = F, notch = F, outlier.shape = NA, show.legend = FALSE) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = IntegratedIntensityCD13, color = Timepoint), cex = 2.3, alpha = 1.0, position =position_jitterdodge(0.2,0.2,0.5))+
ggplot2::theme_bw()+
theme(axis.text = element_text(size=12, colour = "black", face = "bold")) +
theme(axis.title = element_text(size=15, face = "bold")) + ylab("Total intensity of Bile canaliculi on PVM") + xlab("Salicylate treatment (24hpi)") +
ggplot2::ggsave("boxplot_Perimetrics.png",
path ="/Volumes/VS_lab_disk/cellprofiler_perimetrics_salicylate_trail", width = 8, height = 8, units = "in", dpi = 300)
