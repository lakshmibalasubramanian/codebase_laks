tes_vol_24
tes_vol_48 <- t.test(dat_48_inf %>% dplyr::select(Cell_Vol) %>% as.matrix(), dat_48_uninf %>% dplyr::select(Cell_Vol) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_vol_48
dat_33 <- dat %>% dplyr::filter(dat$Timepoint == "33hpi")
View(dat_33)
dat_33_inf <- dat_33 %>% dplyr::filter(dat_33$Status == "INF")
dat_33_uninf <- dat_33 %>% dplyr::filter(dat_33$Status == "UNINF")
tes_vol_33 <- t.test(dat_33_inf %>% dplyr::select(Cell_Vol) %>% as.matrix(), dat_33_uninf %>% dplyr::select(Cell_Vol) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_vol_33
View(dat)
ggplot2::ggsave("SA_Vox_PVM.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_PVM.svg", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
#Plot for SA (voxels) of the PVM (24,33,48 hpi)
P4<- ggplot2::ggplot(dat_PVM) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, Cell_Surf_Vox, fill = Status), outlier.color = NA, fill = "red", alpha = 0.2, width = 0.5, position = position_dodge(width = 0.7), varwidth = F, notch = F) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Cell_Surf_Vox, fill = Status, color = Status), colour = "Red", cex = 2.0, alpha = 0.9, position = position_jitterdodge(0.2,0.2,0.7)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Surface voxels of PVM") + xlab("Timepoint of infection")
ggplot2::ggsave("SA_Vox_PVM.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300) +
ggplot2::ggsave("SA_Vox_PVM.svg", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
P4<- ggplot2::ggplot(dat_PVM) +
ggplot2::geom_boxplot(ggplot2::aes(Timepoint, Cell_Surf_Vox, fill = Status), outlier.color = NA, fill = "red", alpha = 0.2, width = 0.5, position = position_dodge(width = 0.7), varwidth = F, notch = F) +
ggplot2::geom_jitter(ggplot2::aes(Timepoint, y = Cell_Surf_Vox, fill = Status, color = Status), colour = "Red", cex = 2.0, alpha = 0.9, position = position_jitterdodge(0.2,0.2,0.7)) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=14, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=15, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Surface voxels of PVM") + xlab("Timepoint of infection")
View(dat_PVM)
View(dat_PVM)
dat_33_PVM <- dat_PVM %>% dplyr::filter(dat_PVM$Timepoint == "33hpi")
dat_24_PVM <- dat_24_48_PVM %>% dplyr::filter(dat_24_48_PVM$Timepoint == "24hpi")
dat_48_PVM <- dat_24_48_PVM %>% dplyr::filter(dat_24_48_PVM$Timepoint == "48hpi")
dat_33_PVM <- dat_PVM %>% dplyr::filter(dat_PVM$Timepoint == "33hpi")
View(dat_24_PVM)
tes_SV_PVM_24_33 <- t.test(dat_24_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_33_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_vol_33 <- t.test(dat_33_inf %>% dplyr::select(Cell_Vol) %>% as.matrix(), dat_33_uninf %>% dplyr::select(Cell_Vol) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_SV_PVM_24_33 <- t.test(dat_24_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_33_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_SV_PVM_24_33 <- t.test(dat_24_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_33_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
View(dat_24_PVM)
tes_SV_PVM_33_48 <- t.test(dat_33_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_48_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
View(dat_33_inf)
View(dat_24_PVM)
tes_int_BC_PVM <- t.test(dat_24_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), dat_48_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_24_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_48_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_24_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), dat_33_PVM %>% dplyr::select(BC_SA_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_24_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), dat_33_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_24_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), dat_48_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_33_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), dat_48_PVM %>% dplyr::select(BC_int_intensity) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM <- t.test(dat_33_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), dat_48_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM_33_48 <- t.test(dat_33_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), dat_48_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM_33_48
tes_PVM_24_33 <- t.test(dat_24_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), dat_33_PVM %>% dplyr::select(Cell_Surf_Vox) %>% as.matrix(), alternative = c("two.sided"), paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tes_PVM_24_33
cell_dat <- dat_infec %>% group_by(Timepoint) %>% summarise_all(median)
cell_dat$Status <- "CELL"
pvm_dat <- dat_PVM %>% group_by(Timepoint) %>% summarise_all(median)
pvm_dat$Status <- "PVM"
all_dat <- rbind(cell_dat,pvm_dat)
View(all_dat)
cell_dat <- dat_infec %>% group_by(Timepoint) %>% summarise_all(mean)
cell_dat$Status <- "CELL"
pvm_dat <- dat_PVM %>% group_by(Timepoint) %>% summarise_all(mean)
pvm_dat$Status <- "PVM"
all_dat <- rbind(cell_dat,pvm_dat)
View(pvm_dat)
pvm_dat["Normalise_volume"] <- 0
pvm_dat["Normalise_SV"] <- 0
pvm_dat$Normalise_volume <- pvm_dat$Cell_Vol/408.1024
pvm_dat$Normalise_SV <- pvm_dat$Cell_Surf_Vox/5024.60
ggplot2::ggplot(all_dat) +
ggplot2::geom_line(ggplot2::aes(Timepoint, Cell_Vol, group = Status, color = Status),linetype =1, size=0.8, alpha = 1) +
ggplot2::geom_point(ggplot2::aes(Timepoint, Cell_Vol, group = Status, color = Status)) + C +
ggplot2::geom_point(ggplot2::aes(Timepoint, Cell_Surf_Vox, group = Status, color = Status)) +
ggplot2::geom_line(ggplot2::aes(Timepoint, Cell_Surf_Vox, group = Status, color = Status),linetype =2, size = 0.8, alpha = 1) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=12, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=12, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Volume") + xlab("Timepoint of infection") +
ggplot2::ggsave("combined_plot.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
all_dat <- rbind(cell_dat,pvm_dat)
all_dat <- rbind(cell_dat,pvm_dat)
ggplot2::ggplot(pvm_dat) +
ggplot2::geom_line(ggplot2::aes(Timepoint, Cell_Vol, group = Status, color = Status),linetype =1, size=0.8, alpha = 1) +
ggplot2::geom_point(ggplot2::aes(Timepoint, Cell_Vol, group = Status, color = Status)) + C +
ggplot2::geom_point(ggplot2::aes(Timepoint, Cell_Surf_Vox, group = Status, color = Status)) +
ggplot2::geom_line(ggplot2::aes(Timepoint, Cell_Surf_Vox, group = Status, color = Status),linetype =2, size = 0.8, alpha = 1) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=12, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=12, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Volume") + xlab("Timepoint of infection") +
ggplot2::ggsave("combined_plot.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
C <- scale_color_manual(all_dat$Status, values = c("dark green", "Red"))
ggplot2::ggplot(pvm_dat) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status),linetype =1, size=0.8, alpha = 1) +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status)) + C +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status)) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status),linetype =2, size = 0.8, alpha = 1) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=12, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=12, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Volume") + xlab("Timepoint of infection") +
ggplot2::ggsave("combined_plot.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
ggplot2::ggplot(pvm_dat) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status),linetype =1, size=0.8, alpha = 1) +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status)) + C +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status)) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status),linetype =2, size = 0.8, alpha = 1) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=12, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=12, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Volume and SV normalised to 24hpi") + xlab("Timepoint of infection") +
ggplot2::ggsave("combined_plot.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
C <- scale_color_manual(all_dat$Status, values = c("Red"))
ggplot2::ggplot(pvm_dat) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status),linetype =1, size=0.8, alpha = 1) +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_volume, group = Status, color = Status)) + C +
ggplot2::geom_point(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status)) +
ggplot2::geom_line(ggplot2::aes(Timepoint, pvm_dat$Normalise_SV, group = Status, color = Status),linetype =2, size = 0.8, alpha = 1) +
ggplot2::theme_bw() + theme(axis.text = element_text(size=12, face = "bold", colour = "black")) +
theme(axis.title = element_text(size=12, face = "bold"), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) + ylab("Volume and SV normalised to 24hpi") + xlab("Timepoint of infection") +
ggplot2::ggsave("combined_plot.png", path = "/Users/lakshmibalasubramanian/Documents/Lakshmi/SurfaceArea_analysis_new_Jun17/Analysis_SA_vol/Graphs_SA_vol", width = 8, height = 8, units = "in", dpi = 300)
#This script is to extract the data of the BC on pvm from salicylate treated experiment in 24hpi. There were three dataset with 23, 24 & 25 hpi timepoints. The results were obtained by using the macro "BC_PVM_salicylate_Nov17.ijm".
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
#base_path <- "/home/lab-admin/LAKSHMI/Salicylate_BConPVM_analysis/"
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
#Listing the folders list
folder_list <-
c(
"20161020_salicylate_23hpi_BC_PVM_results",
"20161024_salicylate_24hpi_BC_PVM_results",
"20161028_salicylate_25hpi_BC_PVM_results"
)
folder_tre_untre_list <-
c(
"Treated_BCPVM_results",
"Untreated_BCPVM_results"
)
loca_pvm <- list(list())
pvm <- list(list())
for (m in 1:length(folder_list))
{
path <- sprintf("%s%s", base_path, folder_list[m])
for (p in 1:length(folder_tre_untre_list)){
path_final <- sprintf("%s/%s", path, folder_tre_untre_list[p])
print(path_final)
file_timepoint <- list.dirs(path_final)
file_timepoint <- file_timepoint[-1]
for (j in 1:length(file_timepoint)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", file_timepoint[j], files_csv_list[[i]]))
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[j]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[j]])
}
}
tot_dat_pvm <- list(list())
for (k in 1:length(file_timepoint)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
}
pvm[[m]] <- tot_dat_pvm %>% bind_rows()
}
total_pvm <- pvm %>% bind_rows()
View(total_pvm)
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
#This script is to extract the data of the BC on pvm from salicylate treated experiment in 24hpi. There were three dataset with 23, 24 & 25 hpi timepoints. The results were obtained by using the macro "BC_PVM_salicylate_Nov17.ijm".
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
#base_path <- "/home/lab-admin/LAKSHMI/Salicylate_BConPVM_analysis/"
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
#Listing the folders list
folder_list <-
c(
"20161020_salicylate_23hpi_BC_PVM_results",
"20161024_salicylate_24hpi_BC_PVM_results",
"20161028_salicylate_25hpi_BC_PVM_results"
)
folder_tre_untre_list <-
c(
"Treated_BCPVM_results",
"Untreated_BCPVM_results"
)
loca_pvm <- list(list())
pvm <- list(list())
for (m in 1:length(folder_list))
{
path <- sprintf("%s%s", base_path, folder_list[m])
for (p in 1:length(folder_tre_untre_list)){
path_final <- sprintf("%s/%s", path, folder_tre_untre_list[p])
print(path_final)
file_timepoint <- list.dirs(path_final)
file_timepoint <- file_timepoint[-1]
for (j in 1:length(file_timepoint)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", file_timepoint[j], files_csv_list[[i]]))
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[j]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[j]])
}
}
tot_dat_pvm <- list(list())
for (k in 1:length(file_timepoint)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "File Name")
}
pvm[[m]] <- tot_dat_pvm %>% bind_rows()
}
path_final
path_final[1]
path_final[2]
path_final[1]
file_timepoint
#This script is to extract the data of the BC on pvm from salicylate treated experiment in 24hpi. There were three dataset with 23, 24 & 25 hpi timepoints. The results were obtained by using the macro "BC_PVM_salicylate_Nov17.ijm".
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
#base_path <- "/home/lab-admin/LAKSHMI/Salicylate_BConPVM_analysis/"
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
#Listing the folders list
folder_list <-
c(
"20161020_salicylate_23hpi_BC_PVM_results",
"20161024_salicylate_24hpi_BC_PVM_results",
"20161028_salicylate_25hpi_BC_PVM_results"
)
folder_tre_untre_list <-
c(
"Treated_BCPVM_results",
"Untreated_BCPVM_results"
)
loca_pvm <- list(list())
pvm <- list(list())
for (m in 1:length(folder_list))
{
path <- sprintf("%s%s", base_path, folder_list[m])
for (p in 1:length(folder_tre_untre_list)){
path_final <- sprintf("%s/%s", path, folder_tre_untre_list[p])
print(path_final)
file_timepoint <- list.dirs(path_final)
file_name_temp <- list.dirs(path_final,full.names = FALSE)
file_name_temp <- file_name_temp[-1]  # This is just to renumber the array number
file_timepoint <- file_timepoint[-1]
for (j in 1:length(file_timepoint)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", file_timepoint[j], files_csv_list[[i]]))
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[j]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[j]])
}
}
tot_dat_pvm <- list(list())
for (k in 1:length(file_timepoint)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$File <- file_name_temp[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "File Name")
}
pvm[[m]] <- tot_dat_pvm %>% bind_rows()
}
total_pvm <- pvm %>% bind_rows()
View(total_pvm)
#This script is to extract the data of the BC on pvm from salicylate treated experiment in 24hpi. There were three dataset with 23, 24 & 25 hpi timepoints. The results were obtained by using the macro "BC_PVM_salicylate_Nov17.ijm".
library(ggplot2)
library(dplyr)
library(magrittr)
#Declaring the path
#base_path <- "/home/lab-admin/LAKSHMI/Salicylate_BConPVM_analysis"
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
#Listing the folders list
folder_list <- list.dirs(base_path)
folder_list <- folder_list[grepl(".tif", folder_list)]
loca_pvm <- list(list())
temp <- list(list())
cond_tre_untre <- list(list())
image_name <- list(list())
for (m in 1:length(folder_list)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
path_temp <- folder_list[m]
temp <- strsplit(path_temp,"/")
cond_tre_untre[m] <- temp[[1]][7]
image_name[m] <- temp[[1]][8]
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", folder_list[m], files_csv_list[[i]]))
print(dat_pvm[[i]])
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[m]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[m]])
}
tot_dat_pvm <- list(list())
for (k in 1:length(folder_list)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$Condition <- cond_tre_untre[k]
tot_dat_pvm[[k]]$File <- image_name[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "Salicylate treatment","File Name")
}
pvm <- tot_dat_pvm %>% bind_rows()
View(pvm)
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
pvm <- tot_dat_pvm %>% bind_rows()
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
View(pvm)
# Chunk 1
#This script is to extract the data of the BC on pvm from salicylate treated experiment in 24hpi. There were three dataset with 23, 24 & 25 hpi timepoints. The results were obtained by using the macro "BC_PVM_salicylate_Nov17.ijm".
# Chunk 2
library(ggplot2)
library(dplyr)
library(magrittr)
# Chunk 3
#Declaring the path
#base_path <- "/home/lab-admin/LAKSHMI/Salicylate_BConPVM_analysis"
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
#Listing the folders list
folder_list <- list.dirs(base_path)
folder_list <- folder_list[grepl(".tif", folder_list)]
loca_pvm <- list(list())
temp <- list(list())
cond_tre_untre <- list(list())
image_name <- list(list())
for (m in 1:length(folder_list)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
path_temp <- folder_list[m]
temp <- strsplit(path_temp,"/")
cond_tre_untre[m] <- temp[[1]][7]
image_name[m] <- temp[[1]][8]
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", folder_list[m], files_csv_list[[i]]))
print(dat_pvm[[i]])
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[m]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[m]])
}
tot_dat_pvm <- list(list())
for (k in 1:length(folder_list)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$Condition <- cond_tre_untre[k]
tot_dat_pvm[[k]]$File <- image_name[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "Salicylate treatment","File Name")
}
pvm <- tot_dat_pvm %>% bind_rows()
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
View(pvm)
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$Condition <- cond_tre_untre[k]
tot_dat_pvm[[k]]$File <- image_name[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "Salicylate treatment","File Name")
for (k in 1:length(folder_list)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$Condition <- cond_tre_untre[k]
tot_dat_pvm[[k]]$File <- image_name[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "Salicylate treatment","File Name")
}
pvm <- tot_dat_pvm %>% bind_rows()
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
View(pvm)
View(pvm)
base_path <- "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/"
folder_list <- list.dirs(base_path)
folder_list <- folder_list[grepl(".tif", folder_list)]
loca_pvm <- list(list())
temp <- list(list())
cond_tre_untre <- list(list())
image_name <- list(list())
for (m in 1:length(folder_list)){
files_csv_list <-
c(
"statistics_PVM_surfacearea_BC.csv",
"statistics_PVM.csv"
)
path_temp <- folder_list[m]
temp <- strsplit(path_temp,"/")
cond_tre_untre[m] <- temp[[1]][7]
image_name[m] <- temp[[1]][8]
dat_pvm <- list()
for (i in 1:length(files_csv_list)){
dat_pvm[[i]] <- readr::read_csv(sprintf("%s/%s", folder_list[m], files_csv_list[[i]]))
print(dat_pvm[[i]])
}
names(dat_pvm) <- files_csv_list
dat_pvm_vol <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_pvm_vox <- dat_pvm[grep("PVM.csv", names(dat_pvm))]
dat_saBC_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
dat_saBC_int_intensity_pvm <- dat_pvm[grep("surfacearea_BC", names(dat_pvm))]
if (dat_saBC_pvm %>% as.data.frame() %>% nrow() == 0) {
dat_saBC_pvm[[1]][1,] <- 0
dat_saBC_pvm[[1]] <- plyr::colwise(as.numeric)(dat_saBC_pvm[[1]])
}
loca_pvm[[m]] <-
cbind(
lapply(dat_pvm_vol, function(x) x[[2]]) %>% as.matrix(),
lapply(dat_pvm_vox, function(x) x[[5]]) %>% as.matrix(),
lapply(dat_saBC_pvm, function(x) x[[3]] %>% as.numeric() %>% sum()/2) %>% as.matrix(),
lapply(dat_saBC_int_intensity_pvm, function(x) x[[6]] %>% as.numeric %>% sum()) %>% as.matrix()
)%>% as.data.frame()
print(loca_pvm[[m]])
}
tot_dat_pvm <- list(list())
for (k in 1:length(folder_list)){
tot_dat_pvm[[k]] <- rbind(loca_pvm[[k]]) %>% as.data.frame()
tot_dat_pvm[[k]] <- plyr::colwise(as.numeric)(loca_pvm[[k]])
tot_dat_pvm[[k]]$Condition <- cond_tre_untre[k]
tot_dat_pvm[[k]]$File <- image_name[k]
colnames(tot_dat_pvm[[k]]) <- c("cell_Vol", "Surf_Voxels", "saBC_SA", "saBC_SV", "Salicylate treatment","File Name")
}
pvm <- tot_dat_pvm %>% bind_rows()
write.csv(pvm, file = "/Volumes/VS_lab_disk/Lakshmi_working_data/Salicylate_BConPVM_analysis/Analysis_PVM_BC/pvm_BC.csv")
View(pvm)
